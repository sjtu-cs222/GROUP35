Starting.. FLOPs: 135.09M, Params: 3.86M
| MSDNet-Block 10-1-cifar10
Building network with the steps: [3, 1, 1, 1, 1, 1, 1, 1, 1, 1]
|-----------------Block 01----------------|
|          First layer with GCN           |
| Layer 01 input scales 3 output scales 3 |
| Layer 02 input scales 3 output scales 3 |
| Layer 03 input scales 3 output scales 3 |
|-----------------Block 02----------------|
| Layer 04 input scales 3 output scales 3 |
|-----------------Block 03----------------|
| Layer 05 input scales 3 output scales 2 |
|      Transition layer 1 was added!      |
|-----------------Block 04----------------|
| Layer 06 input scales 2 output scales 2 |
|-----------------Block 05----------------|
| Layer 07 input scales 2 output scales 2 |
|-----------------Block 06----------------|
| Layer 08 input scales 2 output scales 2 |
|-----------------Block 07----------------|
| Layer 09 input scales 2 output scales 1 |
|      Transition layer 2 was added!      |
|-----------------Block 08----------------|
| Layer 10 input scales 1 output scales 1 |
|-----------------Block 09----------------|
| Layer 11 input scales 1 output scales 1 |
|-----------------Block 10----------------|
| Layer 12 input scales 1 output scales 1 |
MSDNet(
  (subnets): ModuleList(
    (0): Sequential(
      (MSD_first): MSDFirstLayer(
        (subnets): ModuleList(
          (0): Sequential(
            (0): GCN(
              (conv_l1): Conv2d (3, 32, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
              (conv_l2): Conv2d (32, 32, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
              (conv_r1): Conv2d (3, 32, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
              (conv_r2): Conv2d (32, 32, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
            )
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
            (2): ReLU(inplace)
          )
          (1): Sequential(
            (0): GCN(
              (conv_l1): Conv2d (32, 64, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
              (conv_l2): Conv2d (64, 64, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
              (conv_r1): Conv2d (32, 64, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
              (conv_r2): Conv2d (64, 64, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
            )
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
            (2): ReLU(inplace)
          )
          (2): Sequential(
            (0): GCN(
              (conv_l1): Conv2d (64, 128, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
              (conv_l2): Conv2d (128, 128, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
              (conv_r1): Conv2d (64, 128, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
              (conv_r2): Conv2d (128, 128, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
            )
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
            (2): ReLU(inplace)
          )
        )
      )
      (MSD_layer_1): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (32, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (32, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (64, 12, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (12, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (12, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (2): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (64, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (128, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
      (MSD_layer_2): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (38, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (38, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (76, 12, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (12, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (12, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (2): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (76, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (152, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
      (MSD_layer_3): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (44, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (44, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (88, 12, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (12, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (12, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (2): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (88, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (176, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (1): Sequential(
      (MSD_layer_4): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (50, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (50, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (100, 12, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (12, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (12, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (2): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (100, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (200, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (2): Sequential(
      (MSD_layer_5): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (56, 6, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (112, 12, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (12, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (6, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (12, 6, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (6, 6, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (112, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (224, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
      (Transition): Transition(
        (scales): ModuleList(
          (0): Sequential(
            (0): Conv2d (124, 62, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True)
            (2): ReLU(inplace)
          )
          (1): Sequential(
            (0): Conv2d (248, 124, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(124, eps=1e-05, momentum=0.1, affine=True)
            (2): ReLU(inplace)
          )
        )
      )
    )
    (3): Sequential(
      (MSD_layer_6): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (62, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (62, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (124, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (4): Sequential(
      (MSD_layer_7): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (74, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (74, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (148, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (5): Sequential(
      (MSD_layer_8): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (86, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
          (1): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (86, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (172, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (6): Sequential(
      (MSD_layer_9): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (98, 24, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_down): GCN(
                  (conv_l1): Conv2d (24, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r1): Conv2d (24, 12, kernel_size=(1, 5), stride=(1, 2), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(2, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
              (1): Sequential(
                (Bottleneck_1x1): Conv2d (196, 48, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (48, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (12, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (48, 12, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (12, 12, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
      (Transition): Transition(
        (scales): ModuleList(
          (0): Sequential(
            (0): Conv2d (220, 108, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True)
            (2): ReLU(inplace)
          )
        )
      )
    )
    (7): Sequential(
      (MSD_layer_10): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (108, 96, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (96, 24, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (24, 24, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (96, 24, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (24, 24, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (8): Sequential(
      (MSD_layer_11): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (132, 96, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (96, 24, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (24, 24, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (96, 24, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (24, 24, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (9): Sequential(
      (MSD_layer_12): MSDLayer(
        (subnets): ModuleList(
          (0): _DynamicInputDenseBlock(
            (conv_modules): ModuleList(
              (0): Sequential(
                (Bottleneck_1x1): Conv2d (156, 96, kernel_size=(1, 1), stride=(1, 1))
                (Bottleneck_BN): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
                (Bottleneck_ReLU): ReLU(inplace)
                (Spatial_forward): GCN(
                  (conv_l1): Conv2d (96, 24, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                  (conv_l2): Conv2d (24, 24, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r1): Conv2d (96, 24, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
                  (conv_r2): Conv2d (24, 24, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
                )
                (BN_out): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True)
                (ReLU_out): ReLU(inplace)
              )
            )
          )
        )
      )
    )
    (10): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (200, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (11): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (224, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (12): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (124, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (13): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (148, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (14): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (172, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (15): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (196, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (16): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (108, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (17): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (132, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (18): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (156, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
    (19): CifarClassifier(
      (features): Sequential(
        (0): Conv2d (180, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU(inplace)
        (3): Conv2d (128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU(inplace)
        (6): AvgPool2d(kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (classifier): Linear(in_features=128, out_features=10)
    )
  )
)

